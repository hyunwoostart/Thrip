<!DOCTYPE html>
<html lang="ko">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>일정 리스트</title>
        <script
            type="text/javascript"
            src="//dapi.kakao.com/v2/maps/sdk.js?appkey=d29150c8d61268b1089ff06b57ed40dc&libraries=services"
        ></script>
        <link rel="stylesheet" href="../public/css/reset.css" />
        <link rel="stylesheet" href="../public/css/common.css" />
        <link rel="stylesheet" href="../public/css/trip.css" />
        <script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
        <style>
            .category::before {
                display: none;
            }
            .list_box {
                display: none;
            }
            .open .list_box {
                display: block;
            }
        </style>
    </head>
    <body>
        <div id="wrap" class="trip_detail">
            <!-- 헤더 -->
            <header class="mo_header">
                <nav class="gnb">
                    <ul class="sub_menu">
                        <li>
                            <a href="#none" class="ico_back">
                                <span class="blind">뒤로 가기</span>
                            </a>
                        </li>
                        <li>
                            <a href="#none" class="ico_ham">
                                <span class="blind">메뉴</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </header>
            <!--// 헤더 -->
            <!-- 컨텐츠 -->
            <main class="main">
                <div class="main_txt trip_txtwrap">
                    <h3>부산여행</h3>
                </div>

                <!-- 여행 일정 상세 목록 -->
                <div class="container_tripdetail"></div>
                <!--// 여행 일정 리스트 -->
            </main>
            <!--// 컨텐츠 -->
        </div>
        <script>
            const groupNameBox = document.querySelector('.main_txt h3');
            const list = document.querySelector('.container_tripdetail');
            (async function () {
                const res = await axios({
                    method: 'GET',
                    url: '/api/schedule/detail',
                    params: {
                        groupId: localStorage.getItem('groupId'),
                    },
                });
                const res2 = await axios({
                    method: 'GET',
                    url: '/api/schedule/findGroup',
                    params: {
                        id: localStorage.getItem('groupId'),
                    },
                });
                const { dueDate, groupName } = res2.data.result;
                groupNameBox.textContent = groupName;
                console.log(dueDate, groupName);
                for (let j = 0; j < dueDate; j++) {
                    let k = 0;
                    const listBox = `
        <ul class="detail_wrap">
            <li class="category" onclick="openCategory(${j})">${j + 1}일차</li>
        </ul>`;
                    list.insertAdjacentHTML('beforeend', listBox);
                    for (let i = 0; i < res.data.result.length; i++) {
                        const nowBox = document.querySelectorAll('.detail_wrap')[j];
                        // console.log(res.data.result[i]);
                        const { category, arrTime, detailMemo, groupId, distance, place } = res.data.result[i];
                        const showTime = arrTime.substring(0, 5);
                        if (j === category - 1) {
                            var hour = (distance * 4) / 60;
                            var min = (distance * 4) % 60;
                            html = `
                <li class="list_box" onclick="openBox(${j}, ${k},${place.x},${place.y})">
                    <div class="list_detail">
                        <strong>${place.place_name}</strong>
                        <span>${showTime}</span>
                        <i class="ico_accord"></i>
                        <div class="map_cnt">
                            <div class="maps"></div>
                            <p>다음 장소까지 이동 시간 <span>${hour.toFixed(0)}</span>시간 <span>${min.toFixed(
                                0
                            )}</span>분</p>
                        </div>
                    </div>
                </li>
                `;
                            nowBox.insertAdjacentHTML('beforeend', html);
                            k++;
                        }
                    }
                }
            })();

            let openMaps = []; // 열린 지도의 배열
            function openCategory(list) {
                const allLists = document.querySelectorAll('.detail_wrap');
                allLists.forEach((listElement, index) => {
                    if (index === list) {
                        listElement.classList.toggle('open');
                    }
                });
            }
            function openBox(list, box, x, y) {
                const nowList = document.querySelectorAll('.detail_wrap')[list];
                const nowBox = nowList.querySelectorAll('.list_box')[box];
                console.log('nowList', nowList);
                console.log('nowBox', nowBox);
            }

            function openMap(list, box, place_x, place_y) {
                var place_x = place_x;
                var place_y = place_y;
                const nowList = document.querySelectorAll('.detail_wrap')[list];
                const nowBox = nowList.querySelectorAll('.list_box')[box];
                if (nowBox.classList.contains('on')) {
                    html = `<div id="map" style="width:400px;height:200px;"></div>`;
                    nowBox.insertAdjacentHTML('beforeend', html);
                }
                var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스
                //지도를 생성할 때 필요한 기본 옵션
                var options = {
                    center: new kakao.maps.LatLng(place_y, place_x), //지도의 중심좌표.
                    level: 2, //지도의 레벨(확대, 축소 정도)
                };
                var map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴
                var markerPosition = new kakao.maps.LatLng(place_y, place_x);

                // 마커를 생성합니다
                var marker = new kakao.maps.Marker({
                    position: markerPosition,
                });

                // 마커가 지도 위에 표시되도록 설정합니다
                marker.setMap(map);
            }
        </script>
    </body>
</html>
